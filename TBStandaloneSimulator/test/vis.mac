# Macro file for the initialization phase of "exampleN03.cc"
# when running in interactive mode
#
# Sets some default verbose
#
/control/verbose 2
/control/saveHistory
/run/verbose 2
#
# Use this open statement to create an OpenGL view:
#/vis/open OGL

# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
#/vis/viewer/set/viewpointThetaPhi 90. 90.
/vis/viewer/set/viewpointThetaPhi 35. 30.
#/vis/viewer/set/viewpointThetaPhi 45. 90.
#/vis/viewer/set/viewpointThetaPhi 0. 0.
#
# Specify zoom value:
/vis/viewer/zoom 4
#/vis/viewer/zoom 1
#
# Specify style (surface or wireframe):
#/vis/viewer/set/style wireframe
/vis/viewer/set/style surface
#
# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 2 m
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
#/vis/scene/add/trajectories rich

/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/set 1 red
#/vis/modeling/trajectories/drawByCharge-0/set -1 red
#/vis/modeling/trajectories/drawByCharge-0/set 0 yellow

/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add e-
#/vis/filtering/trajectories/particleFilter-0/add e+
#/vis/filtering/trajectories/particleFilter-0/add pi+
#/vis/filtering/trajectories/particleFilter-0/add pi-
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true

#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set e- blue
/vis/modeling/trajectories/drawByParticleID-0/set e+ blue
/vis/modeling/trajectories/drawByParticleID-0/set gamma red
/vis/modeling/trajectories/drawByParticleID-0/set pi+ green
/vis/modeling/trajectories/drawByParticleID-0/set pi- green
/vis/modeling/trajectories/drawByParticleID-0/set mu+ cyan
/vis/modeling/trajectories/drawByParticleID-0/set mu- cyan
#cyan, magenta, gray,white,yellow

# To superimpose all of the events from a given run:
#/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
/vis/viewer/flush

